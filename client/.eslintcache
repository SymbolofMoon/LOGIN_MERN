[{"/home/prateek/Documents/LOGIN_MERN/client/src/index.js":"1","/home/prateek/Documents/LOGIN_MERN/client/src/App.js":"2","/home/prateek/Documents/LOGIN_MERN/client/src/screens/Register.jsx":"3","/home/prateek/Documents/LOGIN_MERN/client/src/helpers/auth.js":"4","/home/prateek/Documents/LOGIN_MERN/client/src/screens/Activate.jsx":"5","/home/prateek/Documents/LOGIN_MERN/client/src/screens/Login.jsx":"6","/home/prateek/Documents/LOGIN_MERN/client/src/screens/ForgetPassword.jsx":"7"},{"size":1093,"mtime":1609685743345,"results":"8","hashOfConfig":"9"},{"size":140,"mtime":1609679280568,"results":"10","hashOfConfig":"9"},{"size":6283,"mtime":1609680419357,"results":"11","hashOfConfig":"9"},{"size":2193,"mtime":1609676132957,"results":"12","hashOfConfig":"9"},{"size":3582,"mtime":1609683567302,"results":"13","hashOfConfig":"9"},{"size":8331,"mtime":1609685058250,"results":"14","hashOfConfig":"9"},{"size":2991,"mtime":1609685875099,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12to4yj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/prateek/Documents/LOGIN_MERN/client/src/index.js",[],"/home/prateek/Documents/LOGIN_MERN/client/src/App.js",[],"/home/prateek/Documents/LOGIN_MERN/client/src/screens/Register.jsx",["34","35"],"import React, { useState } from 'react';\nimport authSvg from '../assests/auth.svg';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport { authenticate, isAuth } from '../helpers/auth';\nimport { Link, Redirect } from 'react-router-dom';\n\n\n\nconst Register = () => {\n    const [formData, setFormData] = useState({\n      name: '',\n      email: '',\n      password1: '',\n      password2: '',\n      textChange: 'Sign Up'\n    });\n  \n    const { name, email, password1, password2, textChange } = formData;\n    const handleChange = text => e => {\n      setFormData({ ...formData, [text]: e.target.value });\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      if (name && email && password1) {\n        if (password1 === password2) {\n        \n          setFormData({ ...formData, textChange: 'Submitting' });\n          \n          \n          \n          axios.post(`http://localhost:5002/api/register`, { //Change this part of http://localhost\n              \n              name:name,\n              email:email,\n              password: password1\n            })\n            .then(res => {\n              setFormData({\n                ...formData,\n                name: '',\n                email: '',\n                password1: '',\n                password2: '',\n                textChange: 'Submitted'\n              });\n  \n             toast.success(res.data.message);\n             //toast.success(\"Messege send\")\n             \n            })\n            .catch(err => {\n              setFormData({\n                ...formData,\n                name: '',\n                email: '',\n                password1: '',\n                password2: '',\n                textChange: 'Sign Up'\n              });\n              console.log(err.response.data);\n              console.log(err)\n              toast.error(err.response.data.errors);\n            });\n        } else {\n          toast.error(\"Passwords don't matches\");\n        }\n      } else {\n        toast.error('Please fill all fields');\n      }\n    };\n  \n    return (\n      <div className='min-h-screen bg-gray-100 text-gray-900 flex justify-center'>\n        {isAuth() ? <Redirect to='/' /> : null}\n        <ToastContainer />\n        <div className='max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1'>\n          <div className='lg:w-1/2 xl:w-5/12 p-6 sm:p-12'>\n            <div className='mt-12 flex flex-col items-center'>\n              <h1 className='text-2xl xl:text-3xl font-extrabold'>\n                Sign Up for Congar\n              </h1>\n  \n              <form\n                className='w-full flex-1 mt-8 text-indigo-500'\n                onSubmit={handleSubmit}\n              >\n                <div className='mx-auto max-w-xs relative '>\n                  <input\n                    className='w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white'\n                    type='text'\n                    placeholder='Name'\n                    onChange={handleChange('name')}\n                    value={name}\n                  />\n                  <input\n                    className='w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5'\n                    type='email'\n                    placeholder='Email'\n                    onChange={handleChange('email')}\n                    value={email}\n                  />\n                  <input\n                    className='w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5'\n                    type='password'\n                    placeholder='Password'\n                    onChange={handleChange('password1')}\n                    value={password1}\n                  />\n                  <input\n                    className='w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5'\n                    type='password'\n                    placeholder='Confirm Password'\n                    onChange={handleChange('password2')}\n                    value={password2}\n                  />\n                  <button\n                    type='submit'\n                    className='mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none'\n                  >\n                    <i className='fas fa-user-plus fa 1x w-6  -ml-2' />\n                    <span className='ml-3'>{textChange}</span>\n                  </button>\n                </div>\n                <div className='my-12 border-b text-center'>\n                  <div className='leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2'>\n                    Or sign with email or social login\n                  </div>\n                </div>\n                <div className='flex flex-col items-center'>\n                  <a\n                    className='w-full max-w-xs font-bold shadow-sm rounded-lg py-3\n             bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5'\n                    href='/login'\n                    target='_self'\n                  >\n                    <i className='fas fa-sign-in-alt fa 1x w-6  -ml-2 text-indigo-500' />\n                    <span className='ml-4'>Sign In</span>\n                  </a>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className='flex-1 bg-indigo-100 text-center hidden lg:flex'>\n            <div\n              className='m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat'\n              style={{ backgroundImage: `url(${authSvg})` }}\n            ></div>\n          </div>\n        </div>\n        ;\n      </div>\n    );\n  };\n  \n\nexport default Register\n",["36","37"],"/home/prateek/Documents/LOGIN_MERN/client/src/helpers/auth.js",["38"],"import cookie from 'js-cookie'\nimport { GoogleLogout } from 'react-google-login';\n\n// Set in Cookie\nexport const setCookie = (key, value) => {\n    if (window !== 'undefiend') {\n        cookie.set(key, value, {\n            // 1 Day\n            expires: 2\n        }) \n    }\n}\n// remove from cookie\nexport const removeCookie = key => {\n    if (window !== 'undefined') {\n        cookie.remove(key, {\n            expires: 1\n        });\n    }\n};\n\n\n// Get from cookie such as stored token\n// Will be useful when we need to make request to server with token\nexport const getCookie = (key) => {\n    if (window !== 'undefined') {\n        console.log(cookie.get(key))\n        return cookie.get(key);\n    }\n};\n\n// Set in localstorage\nexport const setLocalStorage = (key, value) => {\n    if (window !== 'undefined') {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n};\n\n// Remove from localstorage\nexport const removeLocalStorage = key => {\n    if (window !== 'undefined') {\n        localStorage.removeItem(key);\n    }\n};\n\n// Auth enticate user by passing data to cookie and localstorage during signin\nexport const authenticate = (response, next) => {\n    console.log(\"Hi\")\n    console.log('AUTHENTICATE HELPER ON SIGNIN RESPONSE', response);\n    setCookie('token', response.data.token);\n    setLocalStorage('user', response.data.user);\n    next();\n};\n\n// Access user info from localstorage\nexport const isAuth = () => {\n    if (window !== 'undefined') {\n        const cookieChecked = getCookie(\"token\");\n        \n        if (cookieChecked) {\n              \n            if (localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'));\n            } else {\n                return false;\n            }\n        }\n    }\n};\n\nexport const signout = next => {\n    removeCookie('token');\n    removeLocalStorage('user');\n    next();\n};\n\nexport const updateUser = (response, next) => {\n    console.log('UPDATE USER IN LOCALSTORAGE HELPERS', response);\n    if (typeof window !== 'undefined') {\n        let auth = JSON.parse(localStorage.getItem('user'));\n        auth = response.data;\n        localStorage.setItem('user', JSON.stringify(auth));\n    }\n    next();\n};","/home/prateek/Documents/LOGIN_MERN/client/src/screens/Activate.jsx",["39","40","41","42"],"import React, { useState, useEffect } from 'react';\nimport authSvg from '../assests/welcome.svg';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport { authenticate, isAuth } from '../helpers/auth';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst Activate = ({ match }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    token: '',\n    show: true\n  });\n\n  useEffect(() => {\n    let token = match.params.token;\n    let { name } = jwt.decode(token);\n\n    if (token) {\n      setFormData({ ...formData, name, token });\n    }\n\n    console.log(token, name);\n  }, [match.params]);\n  const { name, token, show } = formData;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    axios\n      .post(`http://localhost:5002/api/activation`, {\n        token\n      })\n      .then(res => {\n        setFormData({\n          ...formData,\n          show: false\n        });\n\n        toast.success(res.data.message);\n      })\n      .catch(err => {\n        \n        toast.error(err.response.data.errors);\n      });\n  };\n\n  return (\n    <div className='min-h-screen bg-gray-100 text-gray-900 flex justify-center'>\n      {isAuth() ? <Redirect to='/' /> : null}\n      <ToastContainer />\n      <div className='max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1'>\n        <div className='lg:w-1/2 xl:w-5/12 p-6 sm:p-12'>\n          <div className='mt-12 flex flex-col items-center'>\n            <h1 className='text-2xl xl:text-3xl font-extrabold'>\n              Welcome {name}\n            </h1>\n\n            <form\n              className='w-full flex-1 mt-8 text-indigo-500'\n              onSubmit={handleSubmit}\n            >\n              <div className='mx-auto max-w-xs relative '>\n                <button\n                  type='submit'\n                  className='mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none'\n                >\n                  <i className='fas fa-user-plus fa 1x w-6  -ml-2' />\n                  <span className='ml-3'>Activate your Account</span>\n                </button>\n              </div>\n              <div className='my-12 border-b text-center'>\n                <div className='leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2'>\n                  Or sign up again\n                </div>\n              </div>\n              <div className='flex flex-col items-center'>\n                <a\n                  className='w-full max-w-xs font-bold shadow-sm rounded-lg py-3\n           bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5'\n                  href='/register'\n                  target='_self'\n                >\n                  <i className='fas fa-sign-in-alt fa 1x w-6  -ml-2 text-indigo-500' />\n                  <span className='ml-4'>Sign Up</span>\n                </a>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className='flex-1 bg-indigo-100 text-center hidden lg:flex'>\n          <div\n            className='m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat'\n            style={{ backgroundImage: `url(${authSvg})` }}\n          ></div>\n        </div>\n      </div>\n      ;\n    </div>\n  );\n};\n\nexport default Activate;","/home/prateek/Documents/LOGIN_MERN/client/src/screens/Login.jsx",["43"],"/home/prateek/Documents/LOGIN_MERN/client/src/screens/ForgetPassword.jsx",["44"],{"ruleId":"45","severity":1,"message":"46","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":22},{"ruleId":"45","severity":1,"message":"49","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":14},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"45","severity":1,"message":"54","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":22},{"ruleId":"45","severity":1,"message":"46","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":22},{"ruleId":"45","severity":1,"message":"49","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":25,"column":6,"nodeType":"57","endLine":25,"endColumn":20,"suggestions":"58"},{"ruleId":"45","severity":1,"message":"59","line":26,"column":24,"nodeType":"47","messageId":"48","endLine":26,"endColumn":28},{"ruleId":"45","severity":1,"message":"60","line":16,"column":29,"nodeType":"47","messageId":"48","endLine":16,"endColumn":39},{"ruleId":"45","severity":1,"message":"60","line":11,"column":18,"nodeType":"47","messageId":"48","endLine":11,"endColumn":28},"no-unused-vars","'authenticate' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'GoogleLogout' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["63"],"'show' is assigned a value but never used.","'textChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [formData, match.params]",{"range":"66","text":"67"},[654,668],"[formData, match.params]"]