[{"/home/prateek/Documents/LOGIN_MERN/client/src/index.js":"1","/home/prateek/Documents/LOGIN_MERN/client/src/App.js":"2","/home/prateek/Documents/LOGIN_MERN/client/src/screens/Register.jsx":"3","/home/prateek/Documents/LOGIN_MERN/client/src/helpers/auth.js":"4"},{"size":689,"mtime":1609669252661,"results":"5","hashOfConfig":"6"},{"size":140,"mtime":1609679280568,"results":"7","hashOfConfig":"6"},{"size":6283,"mtime":1609680419357,"results":"8","hashOfConfig":"6"},{"size":2193,"mtime":1609676132957,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"12to4yj",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/prateek/Documents/LOGIN_MERN/client/src/index.js",[],["20","21"],"/home/prateek/Documents/LOGIN_MERN/client/src/App.js",[],"/home/prateek/Documents/LOGIN_MERN/client/src/screens/Register.jsx",["22","23"],"/home/prateek/Documents/LOGIN_MERN/client/src/helpers/auth.js",["24"],"import cookie from 'js-cookie'\nimport { GoogleLogout } from 'react-google-login';\n\n// Set in Cookie\nexport const setCookie = (key, value) => {\n    if (window !== 'undefiend') {\n        cookie.set(key, value, {\n            // 1 Day\n            expires: 2\n        }) \n    }\n}\n// remove from cookie\nexport const removeCookie = key => {\n    if (window !== 'undefined') {\n        cookie.remove(key, {\n            expires: 1\n        });\n    }\n};\n\n\n// Get from cookie such as stored token\n// Will be useful when we need to make request to server with token\nexport const getCookie = (key) => {\n    if (window !== 'undefined') {\n        console.log(cookie.get(key))\n        return cookie.get(key);\n    }\n};\n\n// Set in localstorage\nexport const setLocalStorage = (key, value) => {\n    if (window !== 'undefined') {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n};\n\n// Remove from localstorage\nexport const removeLocalStorage = key => {\n    if (window !== 'undefined') {\n        localStorage.removeItem(key);\n    }\n};\n\n// Auth enticate user by passing data to cookie and localstorage during signin\nexport const authenticate = (response, next) => {\n    console.log(\"Hi\")\n    console.log('AUTHENTICATE HELPER ON SIGNIN RESPONSE', response);\n    setCookie('token', response.data.token);\n    setLocalStorage('user', response.data.user);\n    next();\n};\n\n// Access user info from localstorage\nexport const isAuth = () => {\n    if (window !== 'undefined') {\n        const cookieChecked = getCookie(\"token\");\n        \n        if (cookieChecked) {\n              \n            if (localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'));\n            } else {\n                return false;\n            }\n        }\n    }\n};\n\nexport const signout = next => {\n    removeCookie('token');\n    removeLocalStorage('user');\n    next();\n};\n\nexport const updateUser = (response, next) => {\n    console.log('UPDATE USER IN LOCALSTORAGE HELPERS', response);\n    if (typeof window !== 'undefined') {\n        let auth = JSON.parse(localStorage.getItem('user'));\n        auth = response.data;\n        localStorage.setItem('user', JSON.stringify(auth));\n    }\n    next();\n};",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":5,"column":10,"nodeType":"31","messageId":"32","endLine":5,"endColumn":22},{"ruleId":"29","severity":1,"message":"33","line":6,"column":10,"nodeType":"31","messageId":"32","endLine":6,"endColumn":14},{"ruleId":"29","severity":1,"message":"34","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":22},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'authenticate' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'GoogleLogout' is defined but never used.","no-global-assign","no-unsafe-negation"]